---
- hosts: localhost
  tasks:
    - name: Add bastion server
      add_host:
        name: bastion.poctron.xyz
        ansible_user: ubuntu
        group: bastion

- hosts: bastion
  tasks:
    - name: Synchronize required-project to bastion
      synchronize:
        dest: "{{ ansible_user_dir }}"
        src: ~/src
        rsync_opts:
          - "--exclude=.tox"

    - name: Symlink ansible-network/windmill-config directory
      file:
        src: ~/src/github.com/ansible-network/windmill-config
        dest: ~/.config/windmill
        state: link

    - name: Symlink ansible configuration file
      file:
        src: ~/src/github.com/ansible-network/windmill-config/ansible/ansible.cfg
        dest: ~/.ansible.cfg
        state: link

    - name: Create tmp directory for logs
      register: tmp_logs
      tempfile:
        state: directory

    - name: Bootstrap tox environment
      args:
        chdir: ~/src/git.openstack.org/openstack/windmill
      shell: /home/ubuntu/.local/bin/tox -evenv --notest

    - name: Install ansible roles via galaxy
      args:
        chdir: ~/src/git.openstack.org/openstack/windmill
        executable: /bin/bash
      shell: source .tox/venv/bin/activate; ./tools/install_roles.sh --force

    - block:
        - name: Run ansible-playbook for site.yaml
          args:
            chdir: ~/src/git.openstack.org/openstack/windmill
          shell: "/home/ubuntu/.local/bin/tox -evenv -- ansible-playbook -v playbooks/site.yaml | tee {{ tmp_logs.path }}/job-output.txt"

      always:
        - name: Generage UUID from ARA
          args:
            chdir: ~/src/git.openstack.org/openstack/windmill
          register: uuid
          shell: ".tox/venv/bin/ara playbook list | grep playbooks/site.yaml | tail -1 | cut -d' ' -f2"

        - name: Generate static HTML for ARA results
          args:
            chdir: ~/src/git.openstack.org/openstack/windmill
          shell: ".tox/venv/bin/ara generate html {{ tmp_logs.path }}/ara-report --playbook {{ uuid.stdout }}"

        - name: Ensure zuul-output directory exists
          delegate_to: localhost
          file:
            path: ~/zuul-output/logs/logs
            state: directory

        - name: Synchronize zuul-output back to zuul
          synchronize:
            dest: ~/zuul-output/logs/logs
            mode: pull
            src: "{{ tmp_logs.path }}/"

        - name: Delete tmp directory for logs
          file:
            path: "{{ tmp_logs.path }}"
            state: absent
